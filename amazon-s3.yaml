apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  namespace: default
  name: criar-s3
  title: Criação de Buckets no Amazon S3
  description: >
    O Amazon S3, ou Simple Storage Service, é um serviço de armazenamento em nuvem oferecido pela Amazon Web Services (AWS). Ele permite armazenar e recuperar grandes quantidades de dados de forma segura, escalável e altamente disponível. O S3 é frequentemente utilizado para hospedar sites estáticos, armazenar backups, distribuir conteúdo e muito mais. Para criar um novo recurso no Amazon S3, é necessário primeiro acessar o console da AWS e navegar até o serviço S3. Em seguida, clique em "Criar bucket" para iniciar o processo. Um "bucket" é o nome dado ao contêiner de armazenamento principal no S3, que é usado para organizar e gerenciar os arquivos. Durante a criação, você precisará fornecer um nome único para o bucket, escolher a região onde ele será hospedado e configurar as permissões de acesso. Após a criação bem-sucedida, você estará pronto para começar a enviar e gerenciar seus dados no Amazon S3.
spec:
  owner: Group:default/telefonica
  type: resource
  parameters:
  - title: Informacões sobre o solicitante
    required:
      - nome
      - email
    properties:
      nome:
        title: Nome do líder técnico da área*
        type: string
        description: Insira o nome do líder técnico.
        ui:autofocus: true
      email:
        title: E-mail do líder técnico*
        type: string
        description: Insira o nome do líder técnico.
        ui:autofocus: true
steps:
  - id: fetch
    name: Template S3 Terraform
    action: fetch:template
    input:
      url: .
      values:
        name: ${{ parameters.bucket }}
        force_destroy: ${{ parameters.force_destroy }}
        acl: ${{ parameters.acl}}
        email: ${{ parameters.email }}
  - id: publish
    name: Publish
    action: publish:github
    input:
      allowedHosts:
        - github.com
      description: This is ${{ parameters.name }}
      repoUrl: ${{ parameters.repoUrl }}
  - id: register
    name: Register
    action: catalog:register
    input:
      repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
      catalogInfoPath: /catalog-info.yaml
  - id: create-github-file
    name: Criar arquivo terraform.tfvars no GitHub
    action: github.createFile
    input:
      owner: pocapp
      repo: pocapp
      path: ./
      content: |-
        name=${{ parameters.name }}
        force_destroy=${{ parameters.force_destroy }}
        acl=${{ parameters.acl }}
output:
  links:
    - title: Repository
      url: ${{ steps.publish.output.remoteUrl }}
    - title: Open in catalog
      icon: catalog
      entityRef: ${{ steps.register.output.entityRef }}